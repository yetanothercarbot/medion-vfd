# This script provides an example of writing to the graphical array next to the
# record button. It is addressed on 0x31 and then takes 9 bytes of data, one for
# each colum in the 9x7 array.
# Display is addressed right-to-left, bottom-to-top.

mode = 0 # Set mode to 0 for loading icon or 1 for face

import random, serial, struct, time
from datetime import datetime
now = datetime.now()

ser = serial.Serial('/dev/ttyUSB0')
text_cmd_struct = struct.Struct('b b')
image_struct = struct.Struct('b b b b b b b b b b b')



cloud=(0x1B, 0x31, 0b0011000, 0b0100100, 0b0100010, 0b0100010, 0b0100010, 0b0100100, 0b0100100, 0b0100100, 0b0011000);
sun = [
	(1, (0x1B, 0x31, 0x0, 0x0, 0x0, 0x8, 0x1C, 0x8, 0x0, 0x0, 0x0)),
	(1, (0x1B, 0x31, 0x0, 0x0, 0x22, 0x8, 0x1C, 0x8, 0x22, 0x0, 0x0)),
	(1, (0x1B, 0x31, 0x0, 0x41, 0x22, 0x8, 0x1C, 0x8, 0x22, 0x41, 0x0))
]

face = [
	(0x1B, 0x31, 0x18, 0x20, 0x46, 0x46, 0x40, 0x46, 0x46, 0x20, 0x18), # Look ahead
	(0x1B, 0x31, 0x18, 0x20, 0x46, 0x46, 0x40, 0x44, 0x44, 0x20, 0x18), # Wink
	(0x1B, 0x31, 0x18, 0x20, 0x40, 0x46, 0x46, 0x40, 0x46, 0x26, 0x18), # Look left
	(0x1B, 0x31, 0x18, 0x26, 0x46, 0x40, 0x46, 0x46, 0x40, 0x20, 0x18), # Look right
	(0x1B, 0x31, 0x18, 0x20, 0x43, 0x43, 0x40, 0x43, 0x43, 0x20, 0x18), # Look up
	(0x1B, 0x31, 0x18, 0x20, 0x4C, 0x4C, 0x40, 0x4C, 0x4C, 0x20, 0x18), # Look ahead
]

multimedia = [
	(0x1B, 0x31, 0x00, 0x08, 0x1C, 0x3E, 0x3E, 0x7F, 0x7F, 0x7F, 0x00), # Play
	(0x1B, 0x31, 0x00, 0x7F, 0x7F, 0x7F, 0x00, 0x7F, 0x7F, 0x7F, 0x00), # Pause
	(0x1B, 0x31, 0x3E, 0x08, 0x1C, 0x3E, 0x3E, 0x08, 0x1C, 0x3E, 0x3E), # Fast Forward
]

loading = [
	(0x1B, 0x31, 0x00, 0x3E, 0x41, 0x41, 0x4F, 0x41, 0x41, 0x3E, 0x00), # Hand pointing up
	(0x1B, 0x31, 0x00, 0x3E, 0x41, 0x43, 0x4D, 0x41, 0x41, 0x3E, 0x00),
	(0x1B, 0x31, 0x00, 0x3E, 0x41, 0x47, 0x49, 0x41, 0x41, 0x3E, 0x00),
	(0x1B, 0x31, 0x00, 0x3E, 0x43, 0x45, 0x49, 0x41, 0x41, 0x3E, 0x00),
	(0x1B, 0x31, 0x00, 0x3E, 0x45, 0x45, 0x49, 0x41, 0x41, 0x3E, 0x00),
	(0x1B, 0x31, 0x00, 0x3E, 0x45, 0x49, 0x49, 0x41, 0x41, 0x3E, 0x00),
	(0x1B, 0x31, 0x00, 0x3E, 0x49, 0x49, 0x49, 0x41, 0x41, 0x3E, 0x00), # Hand pointing right
	(0x1B, 0x31, 0x00, 0x3E, 0x51, 0x49, 0x49, 0x41, 0x41, 0x3E, 0x00),
	(0x1B, 0x31, 0x00, 0x3E, 0x51, 0x51, 0x49, 0x41, 0x41, 0x3E, 0x00),
	(0x1B, 0x31, 0x00, 0x3E, 0x61, 0x51, 0x49, 0x41, 0x41, 0x3E, 0x00),
	(0x1B, 0x31, 0x00, 0x3E, 0x41, 0x71, 0x49, 0x41, 0x41, 0x3E, 0x00),
	(0x1B, 0x31, 0x00, 0x3E, 0x41, 0x61, 0x59, 0x41, 0x41, 0x3E, 0x00),
	(0x1B, 0x31, 0x00, 0x3E, 0x41, 0x41, 0x79, 0x41, 0x41, 0x3E, 0x00), # Hand Pointing down
	(0x1B, 0x31, 0x00, 0x3E, 0x41, 0x41, 0x59, 0x61, 0x41, 0x3E, 0x00),
	(0x1B, 0x31, 0x00, 0x3E, 0x41, 0x41, 0x49, 0x71, 0x41, 0x3E, 0x00),
	(0x1B, 0x31, 0x00, 0x3E, 0x41, 0x41, 0x49, 0x51, 0x61, 0x3E, 0x00),
	(0x1B, 0x31, 0x00, 0x3E, 0x41, 0x41, 0x49, 0x51, 0x51, 0x3E, 0x00),
	(0x1B, 0x31, 0x00, 0x3E, 0x41, 0x41, 0x49, 0x49, 0x51, 0x3E, 0x00),
	(0x1B, 0x31, 0x00, 0x3E, 0x41, 0x41, 0x49, 0x49, 0x49, 0x3E, 0x00), # Hand pointing left
	(0x1B, 0x31, 0x00, 0x3E, 0x41, 0x41, 0x49, 0x49, 0x45, 0x3E, 0x00),
	(0x1B, 0x31, 0x00, 0x3E, 0x41, 0x41, 0x49, 0x45, 0x45, 0x3E, 0x00),
	(0x1B, 0x31, 0x00, 0x3E, 0x41, 0x41, 0x49, 0x45, 0x43, 0x3E, 0x00),
	(0x1B, 0x31, 0x00, 0x3E, 0x41, 0x41, 0x49, 0x47, 0x41, 0x3E, 0x00),
	(0x1B, 0x31, 0x00, 0x3E, 0x41, 0x41, 0x4D, 0x43, 0x41, 0x3E, 0x00),
]

if mode == 0:
	while True:
		for frame in loading:
			image_p = image_struct.pack(*frame)
			ser.write(image_p)
			time.sleep(0.05)
else:
	while True:
		image_p = image_struct.pack(*random.choice(face))
		ser.write(image_p)
		time.sleep(0.3*random.randint(1,6))
		image_p = image_struct.pack(*face[0])
		ser.write(image_p)
		time.sleep(0.3*random.randint(7,18))
